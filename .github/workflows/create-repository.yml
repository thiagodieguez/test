name: Create New Repository

on:
  workflow_dispatch:
    inputs:
      original_repo_name:
        description: 'Original repository name'
        required: true
        default: "test"
      new_repo_name:
        description: 'New repository name'
        required: true

jobs:
  create-repo:
    runs-on: ubuntu-latest

    steps:
    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Create repository [if not exists]
      id: create_repo
      run: |
        response=$(curl -X POST \
        -H "Authorization: token ${{ secrets.ORG_ADMIN_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/user/repos \
        -d "{\"name\":\"${{ github.event.inputs.new_repo_name }}\",\"private\":true}")
        
        repo_url=$(echo $response | jq -r '.html_url')
        echo "Repository URL: $repo_url"

    - name: Clone new repository
      run: |
        git clone https://x-access-token:${{ secrets.ORG_ADMIN_TOKEN }}@github.com/${{ github.repository_owner }}/${{ github.event.inputs.original_repo_name }}.git temp-repo

    - name: Echo copied files
      run: |
        ls -a temp-repo

    - name: Delete .git and .github directories
      run: |
        rm -rf temp-repo/.git temp-repo/.github

    - name: Echo copied files
      run: |
        ls -a temp-repo

    - name: Commit and push files to new repository
      run: |
        cd temp-repo
        git config --global init.defaultBranch main
        git init .
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git config user.name "${GITHUB_ACTOR}"
        git add .
        git commit -m "Initial commit"
        git remote add origin https://x-access-token:${{ secrets.ORG_ADMIN_TOKEN }}@github.com/${{ github.repository_owner }}/${{ github.event.inputs.new_repo_name }}.git
        git push -u origin main
